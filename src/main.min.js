{
  const jsSizes = document.querySelectorAll('.js-size');
  jsSizes.forEach(el => {
      let bodyHeightValue, bodyWeightValue, bodySize;
      const jsSize = el;

      const jsSizeContentToggle = jsSize.querySelector('.js-size-content-toggle');
      const jsSizeContent = jsSize.querySelector('.js-size-content');

      jsSizeContent.addEventListener('show.bs.collapse', function () {
          jsSizeContentToggle.classList.add('active');
      });
      jsSizeContent.addEventListener('hide.bs.collapse', function () {
          jsSizeContentToggle.classList.remove('active');
      });

      jsSizeContentToggle.addEventListener('click', e => {
          e.preventDefault();
          new bootstrap.Collapse(jsSizeContent);
      });

      const jsSizeHeightInput = jsSize.querySelector('.js-size-height-input');
      const jsSizeHeightOutput = jsSize.querySelector('.js-size-height-output');
      const jsSizeWeightInput = jsSize.querySelector('.js-size-weight-input');
      const jsSizeWeightOutput = jsSize.querySelector('.js-size-weight-output');
      const jsSizeResult = jsSize.querySelector('.js-size-result');
      const jsSizeResultAccept = jsSize.querySelector('.js-size-result-accept');
      const jsSizeImages = jsSize.querySelectorAll('.js-size-images');


      const calcBodySize = () => {
          var configSize = localStorage.getItem("config-size");

          bodyHeightValue = jsSizeHeightInput.value;
          jsSizeHeightOutput.textContent = `${bodyHeightValue}cm`;

          bodyWeightValue = jsSizeWeightInput.value;
          jsSizeWeightOutput.textContent = `${bodyWeightValue}kg`;

          bodySize = '';

          if (!configSize) {
              if (bodyHeightValue < 173 && bodyWeightValue < 64) {
                  bodySize = 'M';
              } else if ((bodyHeightValue >= 160) && (bodyHeightValue <= 180) && (bodyWeightValue >= 65) && (bodyWeightValue <= 73)) {
                  bodySize = 'L';
              } else if ((bodyHeightValue >= 165) && (bodyHeightValue <= 185) && (bodyWeightValue >= 73) && (bodyWeightValue <= 80)) {
                  bodySize = 'XL';
              } else if ((bodyHeightValue >= 168) && (bodyHeightValue <= 188) && (bodyWeightValue >= 80) && (bodyWeightValue <= 88)) {
                  bodySize = 'XXL';
              }
          } else {
              configSize = JSON.parse(configSize);

              jsSizeHeightInput.max = configSize.max_height;
              jsSizeHeightInput.min = configSize.min_height;
              jsSizeWeightInput.max = configSize.max_weight;
              jsSizeWeightInput.min = configSize.min_weight;

              configSize.data.reverse().find(sizeItem => {
                  if ((bodyHeightValue >= sizeItem.height_from) && (bodyHeightValue <= sizeItem.height_to) && (bodyWeightValue >= sizeItem.weight_from) && (bodyWeightValue <= sizeItem.weight_to)) {
                      bodySize = sizeItem.name;
                      return true;
                  }
                  return false;
              })
          }
          jsSizeResult.value = bodySize;
          if (jsSizeImages.length === 0) {
              return
          }
          jsSizeImages.forEach(el => el.classList.remove('border', 'border-dark'))
          jsSize.querySelector(`.js-size-${bodySize}`).classList.add('border', 'border-dark');
      }

      calcBodySize();
      jsSizeHeightInput.addEventListener('input', calcBodySize);
      jsSizeWeightInput.addEventListener('input', calcBodySize);


      if (!jsSizeResultAccept) {
          return;
      }
      const changeEvent = new Event('change', {
          bubbles: true,
          cancelable: true,
      });
      jsSizeResultAccept.addEventListener('click', () => {
          const radioTarget = jsSize.querySelector(`input[name^="size-"][value="${bodySize}"]`);
          if (radioTarget) {
              radioTarget.checked = true;
              radioTarget.dispatchEvent(changeEvent);
          }
      });
  });
}